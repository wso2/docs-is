openapi: 3.0.0
info:
  description: >-
    This is the RESTful API for user visible application management in WSO2 Identity Server.
  version: "v1"
  title: WSO2 Identity Server - User Application Management API
  contact:
    name: WSO2 Identity Server
    url: 'https://wso2.com/identity-and-access-management'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://{serverUrl}/t/{tenantDomain}/api/users/v1'
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super
security:
  - OAuth2: []
  - BasicAuth: []
paths:
  /me/applications:
    get:
      tags:
        - Application Listing
      summary: List applications.
      description: |
        This API provides the capability to retrieve
        the list of applications to an authorized user.
      operationId: getApplications
      parameters:
        - $ref: '#/components/parameters/attributesQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - $ref: '#/components/parameters/filterQueryParam'
        - $ref: '#/components/parameters/sortOrderQueryParam'
        - $ref: '#/components/parameters/sortByQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
  '/me/applications/{applicationId}':
    get:
      tags:
        - Application Listing
      summary: Get application by Id.
      description: >
        This API provides the capability to retrieve an application to an authorized user. 
      operationId: getApplication
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  parameters:
    limitQueryParam:
      in: query
      name: limit
      required: false
      description: Maximum number of records to return.
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 30
        example: 10
    offsetQueryParam:
      in: query
      name: offset
      required: false
      description: Number of records to skip for pagination.
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
        example: 5
    filterQueryParam:
      in: query
      name: filter
      required: false
      description: Condition to filter the retrieval of records.
      schema:
        type: string
      examples:
        sw:
          value: name sw sales
          summary: filter by sw operator
        ew:
          value: name ew force
          summary: filter by ew operator
        co:
          value: name co sales
          summary: filter by co operator
        eq:
          value: name eq salesforce
          summary: filter by eq operator
    sortOrderQueryParam:
      in: query
      name: sortOrder
      required: false
      description: |
        Define the order by which the retrieved records should be sorted.
        _This parameter is not supported yet._
      schema:
        type: string
        enum:
          - asc
          - desc
        example: asc
    sortByQueryParam:
      in: query
      name: sortBy
      required: false
      description: |
        Attribute by which the retrieved records should be sorted.
        _This parameter is not supported yet._
      schema:
        type: string
      example: name
    attributesQueryParam:
      in: query
      name: attributes
      required: false
      description: >-
        Define only the required attributes to be sent in the response object as a comma-separated string.
      schema:
        type: string
      example: name,description,logo
  responses:
    NotFound:
      description: The specified resource is not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized.
    ServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not Implemented.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Resource Forbidden.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://localhost:9443/oauth/authorize'
          tokenUrl: 'https://localhost:9443/oauth/token'
          scopes: {}
        password:
          tokenUrl: 'https://localhost:9443/oauth/token'
          scopes: {}
  schemas:
    ApplicationListResponse:
      type: object
      properties:
        totalResults:
          type: integer
          description: The total number of results matching the query.
          example: 30
        startIndex:
          type: integer
          description: The 1-based index of the first result in the current set of results.
          example: 5
        count:
          type: integer
          description: Number of results returned in response.
          example: 1
        applications:
          type: array
          description: Applications matching the query.
          items:
            $ref: '#/components/schemas/ApplicationResponse'
        links:
          type: array
          description: Navigation links.
          items:
            $ref: '#/components/schemas/Link'
          example:
            - href: '/t/carbon.super/api/user/v1/me/applications?offset=10&limit=10'
              rel: 'next'
            - href: '/t/carbon.super/api/user/v1/me/applications?offset=0&limit=5'
              rel: 'previous'
            - href: '/t/carbon.super/api/user/v1/me/applications?offset=0&limit=10'
              rel: 'first'
            - href: '/t/carbon.super/api/user/v1/me/applications?offset=20&limit=10'
              rel: 'last'

    ApplicationResponse:
      type: object
      properties:
        id:
          type: string
          example: 85e3f4b8-0d22-4181-b1e3-1651f71b88bd
        name:
          type: string
          example: Salesforce
        description:
          type: string
          example: Customer relationship management application
        image:
          type: string
          format: uri
          example: 'https://example.com/logo/mysalesforce-logo.png'
        accessUrl:
          type: string
          format: uri
          example: 'https://example.my.salesforce.com/'
    Link:
      type: object
      properties:
        href:
          type: string
          format: uri
          description: Path to the target resource.
        rel:
          type: string
          description: Describes how the current context is related to the target resource.
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: UAM-10000
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047