openapi: 3.0.0
info:
  version: "v1"
  title: 'Asgardeo - Organization Management API Definition'
  description: |
    'This is the RESTful API for organization management in Asgardeo. This API allows users 
    to create, update, retrieve and delete organizations. <br><br>
    
    <b>Important</b>:<br>
    You need a paid Asgardeo subscription to create hierarchical organizations. If you don't already have one, view the available [subscription plans](https://wso2.com/asgardeo/pricing/){:target="_blank"} and contact the Asgardeo sales team.'
servers:
  - url: 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1'
    variables:
      server-url:
        default: https://api.asgardeo.io/t/{organization-name}/o/api/server/v1
      root-organization-name:
        default: "{organization-name}"
security:
  - OAuth2: []

paths:
  /organizations:
    post:
      tags:
        - Organization
      description: |
        This API is used to create the organization defined in the user input.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_create`
      summary:
        Create a new organization.
      operationId: organizationPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPOSTRequest'
        description: This represents the organization to be added.
        required: true
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: Location of the newly created organization.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
              "name": "ABC Builders",
              "description": "Building constructions",
              "attributes": [
                {
                  "key": "Country",
                  "value": "USA"
                }
              ]
            }'
      x-codegen-request-body-name: body
    get:
      description: |
        This API is used to search and retrieve organizations created for this tenant.
        
        Organizations can be filtered by id, name, description, created, lastModified, status, and parentId attributes. 
        
        Supported operators: "eq"(equals), "co"(contains), "sw"(starts with), "ew"(ends with), "ge"(greater than or equals), "le"(less than or equals), "gt"(greater than), "lt"(less than)
        
        example: filter=name+eq+ABC Builders
        
        <b>Scope(Permission) required:</b> `internal_org_organization_view`
      summary:
        Retrieve organizations created for this tenant which matches the defined search criteria, if any.
      operationId: organizationsGet
      parameters:
        - $ref: '#/components/parameters/filterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/afterQueryParam'
        - $ref: '#/components/parameters/beforeQueryParam'
        - $ref: '#/components/parameters/recursiveQueryParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /organizations/check-name:
    post:
      summary: Check organization with given name exist among the organizations hierarchy.
      description: |
        This API is used to check whether organization with particular name exist or not.
        
        If the organization name is available for use, the response will be "available": true, else it will be "available": false.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_view`
      operationId: organizationsCheckNamePost
      requestBody:
        description: OrganizationNameCheckPOSTRequest object containing the organization name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckPOSTRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNameCheckPOSTResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/check-name' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
              "name": "XYZ Builders"
            }'
      x-codegen-request-body-name: body
  /organizations/{organization-id}:
    get:
      description: |
        This API is used to get an existing organization identified by the organization ID.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_view`
      summary:
        Get an existing organization, identified by the organization ID.
      parameters:
        - name: organization-id
          in: path
          description: ID of the organization.
          required: true
          schema:
            type: string
            example: 5355f3f0-f8b3-457f-805a-b32a668c5125
        - $ref: '#/components/parameters/includePermissionsQueryParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/06c1f4e2-3339-44e4-a825-96585e3653b1' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
    patch:
      description: |
        This API provides the capability to update an organization property
        using patch request. Organization patch is supported only for key-value pairs.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_update`
      summary:
        Patch an organization property by ID. Patch is supported only for
        key-value pairs.
      parameters:
        - name: organization-id
          in: path
          description:  ID of the organization to be patched.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              example:
                {
                  "id": "06c1f4e2-3339-44e4-a825-96585e3653b1",
                  "name": "XYZ Builders",
                  "description": "Building constructions",
                  "status": "ACTIVE",
                  "created": "2021-10-25T12:31:53.406Z",
                  "lastModified": "2021-10-25T12:31:53.406Z",
                  "type": "TENANT",
                  "parent": {
                    "id": "d90f322f-59d9-39b8-8555-f049fa318397",
                    "ref": "/o/api/server/v1/organizations/d90f322f-59d9-39b8-8555-f049fa318397"
                  },
                  "attributes": [
                    {
                      "key": "Country",
                      "value": "USA"
                    }
                  ]
                }
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request PATCH 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/06c1f4e2-3339-44e4-a825-96585e3653b1' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '[
              {
                "operation": "REPLACE",
                "path": "/name",
                "value": "XYZ Builders"
              }
            ]'
      x-codegen-request-body-name: body
    put:
      description: |
        This API provides the capability to update an organization by its id.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_update`
      summary:
        Update an organization by ID.
      parameters:
        - name: organization-id
          in: path
          description: ID of the organization to be updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPUTRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              example:
                {
                  "id": "06c1f4e2-3339-44e4-a825-96585e3653b1",
                  "name": "ABCD Builders",
                  "description": "Building constructions company",
                  "status": "ACTIVE",
                  "created": "2021-10-25T12:31:53.406Z",
                  "lastModified": "2021-10-25T12:31:53.406Z",
                  "type": "TENANT",
                  "parent": {
                    "id": "d90f322f-59d9-39b8-8555-f049fa318397",
                    "ref": "/o/api/server/v1/organizations/d90f322f-59d9-39b8-8555-f049fa318397"
                  },
                  "attributes": [
                    {
                      "key": "Country",
                      "value": "USA"
                    }
                  ]
                }
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request PUT 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/06c1f4e2-3339-44e4-a825-96585e3653b1' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
              "name": "ABCD Builders",
              "description": "Building constructions company",
              "status": "ACTIVE",
              "attributes": [
                {
                  "key": "Country",
                  "value": "USA"
                }
              ]
            }'
      x-codegen-request-body-name: body
    delete:
      description: |
        This API provides the capability to delete an organization by
        giving its ID.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_delete`
      summary:
        Delete an organization by using the organization's ID.
      parameters:
        - name: organization-id
          in: path
          description:  ID of the organization to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Organization
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request DELETE 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/06c1f4e2-3339-44e4-a825-96585e3653b1' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /organizations/check-discovery:
    post:
      tags:
        - Organization Discovery
      summary: Check whether given discovery attribute exists among the organization hierarchy.
      description: |
        This API is used to verify whether a specific discovery attribute has already been associated with an organization within the hierarchy. It is available for use within any organization in the hierarchy.
        
        <b>Scope(Permission) required:</b> `internal_org_organization_discovery_view`
      operationId: organizationCheckDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDiscoveryCheckPOSTRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDiscoveryCheckPOSTResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/check-discovery' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
              "type": "emailDomain",
              "value": "abc.com"
            }'
      x-codegen-request-body-name: body
  /organizations/metadata:
    get:
      tags:
        - Organization Metadata
      description: |
        This API facilitates the retrieval of metadata including discovery attributes of the logged in organization.<br>
        
        <b>Scope(Permission) required:</b> `internal_org_organization_view`
      summary:
        Get metadata of the logged in organization.
      operationId: organizationMetadataGet
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMetadata'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/o/api/server/v1/organizations/metadata' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
components:
  parameters:
    filterQueryParam:
      in: query
      name: filter
      required: false
      description:
        Condition to filter the retrieval of records.
      schema:
        type: string
    limitQueryParam:
      in: query
      name: limit
      required: false
      description:
        Maximum number of records to be returned. (Should be greater than 0)
      schema:
        type: integer
        format: int32
        minimum: 0
    offsetQueryParam:
      in: query
      name: offset
      required: false
      description: Number of records to skip for pagination.
      schema:
        type: integer
        format: int32
        minimum: 0
    beforeQueryParam:
      in: query
      name: before
      required: false
      description:
        Points to the previous range of data that can be retrieved.
      schema:
        type: string
    afterQueryParam:
      in: query
      name: after
      required: false
      description:
        Points to the next range of data to be returned.
      schema:
        type: string
    recursiveQueryParam:
      in: query
      name: recursive
      required: false
      description:
        Determines whether a recursive search should happen.
      schema:
        type: boolean
        default: false
    showChildrenQueryParam:
      in: query
      name: showChildren
      required: false
      description:
        Returns the organization details along with the child organization IDs belonging to this organization.
      schema:
        type: boolean
        default: false
    includePermissionsQueryParam:
      in: query
      name: includePermissions
      required: false
      description:
        Returns the organization details along with permissions assigned for the requested user in this organization.
      schema:
        type: boolean
        default: false

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ORG-00000
          description: An error code.
        message:
          type: string
          example: Some Error Message
          description: An error message.
        description:
          type: string
          example: Some Error Description
          description: An error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
          description: An error trace identifier.

    OrganizationPOSTRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "ABC Builders"
        description:
          type: string
          example: "Building constructions"
        type:
          type: string
          enum:
            - TENANT
            - STRUCTURAL
          default: TENANT
        parentId:
          type: string
          description: "The parent organization id should be the organization where the request is invoked. If a value is not specified it will be resolved internally."
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
      example:
        {
          "name": "ABC Builders",
          "description": "Building constructions",
          "attributes": [
            {
              "key": "Country",
              "value": "USA"
            }
          ]
        }
    OrganizationPUTRequest:
      type: object
      required:
        - name
        - status
      properties:
        name:
          type: string
          example: "ABCD Builders"
        description:
          type: string
          example: "Building constructions company"
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    OrganizationNameCheckPOSTRequest:
      type: object
      properties:
        name:
          type: string
          example: "XYZ Builders"
    OrganizationNameCheckPOSTResponse:
      type: object
      properties:
        available:
          type: boolean
          example: true
    Attribute:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          example: "Country"
        value:
          type: string
          example: "USA"
    OrganizationsResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          example:
            [
              {
                "href": "/o/api/server/v1/organizations?limit=10&filter=name+co+der&next=MjAyMS0xMi0yMSAwNToxODozMS4wMDQzNDg=",
                "rel": "next",
              },  {
              "href": "/o/api/server/v1/organizations?limit=10&filter=name+co+der&before=MjAyMS0xMi0yMSAwNToxODozMS4wMDQzNDg=",
              "rel": "previous",
            }
            ]
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/BasicOrganizationResponse'
    Link:
      type: object
      properties:
        href:
          type: string
          format: uri
          description: Endpoint that will return the next or previous page of data.
        rel:
          type: string
          description: Describes whether the provided link is to access the next or previous page of data.
      readOnly: true
    BasicOrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - ref
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        status:
          type: string
          enum: [ ACTIVE, DISABLED ]
          example: ACTIVE
        ref:
          type: string
          example: '/o/api/server/v1/organizations/06c1f4e2-3339-44e4-a825-96585e3653b1'
    OrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - created
        - lastModified
        - type
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        description:
          type: string
          example: 'Building constructions'
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        created:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        lastModified:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
        parent:
          $ref: '#/components/schemas/ParentOrganization'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    GetOrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - created
        - lastModified
        - type
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        description:
          type: string
          example: 'Building constructions'
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        created:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        lastModified:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
        parent:
          $ref: '#/components/schemas/ParentOrganization'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        permissions:
          type: array
          items:
            type: string
    #-----------------------------------------------------
    # Organization Parent Object
    #-----------------------------------------------------
    ParentOrganization:
      type: object
      required:
        - id
        - ref
      properties:
        id:
          type: string
          example: 'd90f322f-59d9-39b8-8555-f049fa318397'
        ref:
          type: string
          example: '/o/api/server/v1/organizations/d90f322f-59d9-39b8-8555-f049fa318397'

    #-----------------------------------------------------
    # Organization Patch Operation Object
    #-----------------------------------------------------
    OrganizationPatchRequest:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationPatchRequestItem'
    OrganizationPatchRequestItem:
      description: A JSONPatch as defined by RFC 6902. Patch operation is supported only for root level attributes of an organization.
      required:
        - operation
        - path
      properties:
        operation:
          type: string
          description: The operation to be performed.
          enum:
            - ADD
            - REMOVE
            - REPLACE
          example: REPLACE
        path:
          type: string
          description: A JSON-Pointer
          example: '/name'
        value:
          type: string
          description: The value to be used within the operations.
          example: 'XYZ Builders'
    DiscoveryAttribute:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          example: 'emailDomain'
        values:
          type: array
          items:
            type: string
            example: 'abc.com'
    OrganizationDiscoveryCheckPOSTRequest:
      required:
        - type
        - value
      type: object
      properties:
        type:
          type: string
          example: 'emailDomain'
        value:
          type: string
          example: 'abc.com'
    OrganizationDiscoveryCheckPOSTResponse:
      type: object
      required:
        - available
      properties:
        available:
          type: boolean
          example: true

    OrganizationMetadata:
      type: object
      required:
        - id
        - name
        - status
        - created
        - lastModified
        - type
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        description:
          type: string
          example: 'Building constructions'
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        created:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        lastModified:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
        parent:
          $ref: '#/components/schemas/ParentOrganization'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        permissions:
          type: array
          items:
            type: string
        discoveryAttributes:
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryAttribute'

  #--------------------------------------------------------
  # Descriptions of Organization Management API responses.
  #--------------------------------------------------------
  responses:
    BadRequest:
      description: Invalid input in the request.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Requested resource is not found.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication information is missing or invalid.
    Forbidden:
      description: Access forbidden.
    ServerError:
      description: Internal server error.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not Implemented.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    OrgNotFound:
      description: Organization Not Found
    OrgExist:
      description: Organization Exist
  #-----------------------------------------------------
  # Applicable authentication mechanisms.
  #-----------------------------------------------------
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.asgardeo.io/t/{organization-name}/oauth2/authorize'
          tokenUrl: 'https://api.asgardeo.io/t/{organization-name}/oauth2/token'
          scopes: {}
      description: "**Authorization code OAuth flow** + **Organization Switch**"
