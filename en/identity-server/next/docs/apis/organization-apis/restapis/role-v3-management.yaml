openapi: 3.1.0
info:
  title: SCIM 2.0 Role Management API
  description: |
    SCIM 2.0 Role Management endpoints
  version: 3.0.0

servers:
  - url: https://{serverUrl}/t/{tenantDomain}/o/scim2
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super

security:
  - OAuth2: []
paths:
  /v3/Roles:
    get:
      tags:
        - Roles Endpoint
      summary: Filter Roles
      description: |
        This API returns roles according to the specified filter, sort and pagination parameters.

        <b>Scope(Permission) required:</b> `internal_org_role_mgt_view`
      operationId: getRoleV3
      parameters:
        - name: filter
          in: query
          description: Filter expression for filtering
          required: false
          schema:
            type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          required: false
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: |-
            Specifies the attribute whose value
            SHALL be used to order the returned responses
          required: false
          schema:
            type: string
        - name: sortOder
          in: query
          description: The order in which the "sortBy" parameter is applied.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolesListResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: No Role found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/scim2/v3/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    post:
      tags:
        - Roles Endpoint
      summary: Create Role
      description: |
        This API creates a role and returns the details of the created role including its unique ID.

        <b>Scope(Permission) required:</b> `internal_org_role_mgt_meta_create`
      operationId: createRoleV3
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleCreationObjectV3'
      responses:
        '201':
          description: Valid role is created
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePostResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorRoleNotAvailable'
        '409':
          description: Role already exists
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorRoleAlreadyAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
              'https://localhost:9443/o/scim2/v3/Roles' \
              -H 'accept: application/scim+json' \
              -H 'Content-Type: application/scim+json' \
              -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
              -d '{
                "schemas": [
                  "urn:ietf:params:scim:schemas:extension:2.0:Role"
                ],
                "displayName": "loginRole",
                "audience": {
                  "value": "3645709f-ea8d-5595-7690-e1fa0efe3df9",
                  "type": "organization"
                },
                "permissions": [
                  {
                    "value": "internal_login",
                    "display": "Internal Login"
                  }
                ]
              }'
      x-codegen-request-body-name: body
  /v3/Roles/.search:
    post:
      tags:
        - Roles Endpoint
      summary: Search Roles
      description: |
        This API returns roles according to the specified filter, sort and pagination parameters.

        <b>Scope(Permission) required:</b> `internal_org_role_mgt_view`
      operationId: getRolesByPostV3
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleSearchRequestObjectV3'
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid roles are not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchErrorResponseObject'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/o/v3/Roles/.search' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ],
            "startIndex": 1,
            "filter": "displayName eq loginRole"
            }'
      x-codegen-request-body-name: body
  /v3/Roles/{id}:
    get:
      tags:
        - Roles Endpoint
      summary: Get Role by ID
      description: |
        This API returns the role details of a particular role using its unique ID.
        
        <b>Scope(Permission) required:</b> `internal_org_role_mgt_view`
      operationId: getRolebyIdV3
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          required: false
          type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          required: false
          type: string
      responses:
        '200':
          description: Valid role is found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleGetResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '500':
          description: Internal Server Error
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/scim2/v3/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
        - Roles Endpoint
      summary: Update Role - PUT
      description: |
        This API updates the role's display name and permissions, and returns the updated role details using a PUT operation.
        
        <b>Scope(Permission) required:</b> `internal_org_role_mgt_meta_update`
      operationId: updateRoleV3
      consumes:
        - application/scim+json
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RolePutRequestObjectV3'
      responses:
        '200':
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePutResponseObjectV3'
        '400':
          description: Invalid Input
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInvalidInput'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' \
              'https://localhost:9443/o/scim2/v3/Roles/{role-id}' \
              -H 'accept: application/scim+json' \
              -H 'Content-Type: application/scim+json' \
              -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
              -d '{
                "displayName": "loginRole",
                "permissions": [
                  {
                    "value": "internal_login",
                    "display": "Internal Login"
                  }
                ]
              }'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Roles Endpoint
      summary: Delete Role
      description: |
        This API deletes a particular role using its unique ID.
        
        <b>Scope(Permission) required:</b> `internal_org_role_mgt_delete`
      operationId: deleteRoleV3
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      responses:
        '204':
          description: Role is deleted
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '500':
          description: Internal Server Error
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/o/scim2/v3/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    patch:
      tags:
        - Roles Endpoint
      summary: Update Role - PATCH
      description: |
        This API updates the role's display name and permissions, and returns the updated role details using a PATCH operation.
        
         <b>Scope(Permission) required:</b> `internal_org_role_mgt_meta_update`
      operationId: patchRole
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRoleOperationRequestObjectV3'
      responses:
        '200':
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/PatchRoleOperationResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/o/scim2/v3/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "schemas": [
                "urn:ietf:params:scim:api:messages:2.0:PatchOp"
              ],
              "Operations": [
                {
                  "op": "replace",
                  "path": "displayName",
                  "value": "OrganizationEditor"
                },
                {
                  "op": "replace",
                  "value": {
                    "permissions": [
                      {
                        "value": "internal_role_mgt_view"
                      }
                    ]
                  }
                }
              ]
            }'
          x-codegen-request-body-name: body
  /v3/Roles/{id}/Users:
    put:
      tags:
        - Roles Endpoint
      summary: Update User Role - PUT
      description: |
        This API assign users into role, and returns the updated role details using a PUT operation.

        <b>Scope(Permission) required:</b> `internal_org_role_mgt_users_update`
      operationId: updateUserRoleV3
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleEntitlementPutRequestObjectV3'
      responses:
        '200':
          description: Valid role is found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementPutResponseV3'
        '400':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInvalidInput'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' 'https://localhost:9443/o/scim2/v3/Roles/{role-id}/Users' \
            --header 'accept: application/scim+json' \
            --header 'Content-Type: application/scim+json' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --data '[
                {
                  "value": "ae66119c-b083-4d4f-81bd-8aa0c3d0a1df"
                },
                {
                  "value": "a9b7da54-41b0-4e3c-823a-731bf3f76937"
                }
            ]'
    patch:
      tags:
        - Roles Endpoint
      summary: Update User Role - PATCH
      description: |
        This API updates assign users into role, and returns the updated role details using a PATCH operation.

         <b>Scope(Permission) required:</b> `internal_org_role_mgt_users_update`
      operationId: patchUserRoleV3
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleEntitlementPatchRequestV3'
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/PatchRoleOperationResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid roles are not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchErrorResponseObject'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' 'https://localhost:9443/o/scim2/v3/Roles/{role-id}/Users' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --data '{
                "Operations": [
                    {
                        "op": "add",
                        "value": [
                            {
                                "display": "john",
                                "value": "ae66119c-b083-4d4f-81bd-8aa0c3d0a1df"
                            },
                            {
                                "display": "sam",
                                "value": "deccc32d-0f63-4888-897e-75c1c4e954b2"
                            }
                        ]
                    },
                    {
                        "op": "remove",
                        "path": "value eq a9b7da54-41b0-4e3c-823a-731bf3f76937"
                    }
                ],
                "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                ]
            }'
      x-codegen-request-body-name: body
  /v3/Roles/{id}/Groups:
    put:
      tags:
        - Roles Endpoint
      summary: Update Group Role - PUT
      description: |
        This API assign groups into role, and returns the updated role details using a PUT operation.

        <b>Scope(Permission) required:</b> `internal_org_role_mgt_groups_update`
      operationId: updateGroupRoleV3
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleEntitlementPutRequestObjectV3'
      responses:
        '201':
          description: Valid role is created
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePutResponseObjectV3'
        '400':
          description: Invalid Input
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInvalidInput'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorRoleNotAvailable'
        '406':
          description: Role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' 'https://localhost:9443/o/scim2/v3/Roles/{role-id}/Groups' \
            --header 'accept: application/scim+json' \
            --header 'Content-Type: application/scim+json' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --data '[
                {
                  "value": "dd95d8bd-2933-4d64-8a9c-11bd6a89ec59"
                },
                {
                  "value": "c3eec3e8-6b0f-475f-9eba-9fc0ee4dc923"
                }
            ]'
      x-codegen-request-body-name: body
    patch:
      tags:
        - Roles Endpoint
      summary: Update Group Role - PATCH
      description: |
        This API updates assign groups into role, and returns the updated role details using a PATCH operation.

         <b>Scope(Permission) required:</b> `internal_org_role_mgt_groups_update`
      operationId: patchGroupRoleV3
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleEntitlementPatchRequestV3'
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/PatchRoleOperationResponseObjectV3'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid roles are not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchErrorResponseObject'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' 'https://localhost:9443/o/scim2/v3/Roles/{role-id}/Groups' \
            --header 'accept: application/scim+json' \
            --header 'Content-Type: application/scim+json' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --data '{
                "Operations": [
                    {
                        "op": "add",
                        "value": [
                                {
                                    "value": "dd95d8bd-2933-4d64-8a9c-11bd6a89ec59"
                                }
                        ]
                    },
                    {
                    "op": "remove",
                    "path": "value eq c3eec3e8-6b0f-475f-9eba-9fc0ee4dc923"
                    }
                ],
                "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                ]
            }'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes:
            view: internal_role_mgt_view
            create: internal_role_mgt_create
            update: internal_role_mgt_update
            delete: internal_role_mgt_delete
  schemas:
    #-----------------------------------------------------
    # The Roles V3 List Response Object
    #-----------------------------------------------------
    RolesListResponseObjectV3:
      type: object
      properties:
        totalResults:
          type: integer
          example: 3
        startIndex:
          type: integer
          example: 1
        itemsPerPage:
          type: integer
          example: 3
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
        Resources:
          type: array
          items:
            $ref: "#/components/schemas/RoleGetResponseObjectV3"
    #-----------------------------------------------------
    # The Role V3 GET Response Object
    #-----------------------------------------------------
    RoleGetResponseObjectV3:
      type: object
      properties:
        displayName:
          type: string
          example: 'loginRole'
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/v3/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
            resourceType:
              type: string
              example: Role
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ application, organization ]
              example: 'organization'
        users:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                example: "https://localhost:9443/scim2/Users/3a12bae9-4386-44be-befd-caf349297f45"
              display:
                type: string
                example: 'kim'
              value:
                type: string
                example: '008bba85-451d-414b-87de-c03b5a1f4217'
        groups:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                example: "https://localhost:9443/scim2/Groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469"
              display:
                type: string
                example: 'PRIMARY/manager'
              value:
                type: string
                example: '7bac6a86-1f21-4937-9fb1-5be4a93ef469'
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: 'internal_login'
              display:
                type: string
                example: 'Internal Login'
        associatedApplications:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              display:
                type: string
          example:
            - value: '9bbc6a86-1f21-4937-9fb1-5be4a93ef499'
              display: 'XY Web Application'
            - value: '67bc6a86-1f21-4937-9fb1-5be4a93ef488'
              display: 'XY Mobile Application'
    #-----------------------------------------------------
    # The Role Creation Object
    #-----------------------------------------------------
    RoleCreationObjectV3:
      type: object
      required:
        - displayName
        - schemas
      properties:
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        displayName:
          type: string
          example: "loginRole"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            type:
              type: string
              enum: [ 'applciation', 'organization' ]
              example: 'organization'
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: "internal_login"
              display:
                type: string
                example: "Internal Login"
    #-----------------------------------------------------
    # The Role Post Response Object
    #-----------------------------------------------------
    RolePostResponseObjectV3:
      type: object
      properties:
        displayName:
          type: string
          example: 'loginRole'
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/v3/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
            resourceType:
              type: string
              example: Role
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ application, organization ]
              example: 'organization'
    #-----------------------------------------------------
    # The Roles Search Response Object
    #-----------------------------------------------------
    RoleSearchResponseObjectV3:
      type: object
      properties:
        totalResults:
          type: integer
          example: 1
        startIndex:
          type: integer
          example: 1
        itemsPerPage:
          type: integer
          example: 3
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
        Resources:
          type: array
          items:
            $ref: "#/components/schemas/RoleGetResponseObjectV2"
    RolePutRequestObjectV3:
      type: object
      properties:
        displayName:
          type: string
          example: "loginRole"
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: 'internal_login'
              display:
                type: string
                example: 'Internal Login'
    #-----------------------------------------------------
    # The Role PUT response object
    #-----------------------------------------------------
    RolePutResponseObjectV3:
      type: object
      properties:
        displayName:
          type: string
          example: 'loginRole'
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/v3/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ 'application', 'organization' ]
              example: 'organization'
    #-----------------------------------------------------
    # The Role PUT response object
    #-----------------------------------------------------
    RoleEntitlementPutResponseV3:
      type: object
      properties:
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/v3/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ 'application', 'organization' ]
              example: 'organization'
    #-----------------------------------------------------
    # The Patch Role Operation Input
    #-----------------------------------------------------
    PatchRoleOperationRequestObjectV3:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:api:messages:2.0:PatchOp"
        Operations:
          type: array
          items:
            $ref: "#/components/schemas/RolePatchOperationobjV3"
    #-----------------------------------------------------
    # The Role Patch Operation Object
    #-----------------------------------------------------
    RolePatchOperationobjV3:
      type: object
      properties:
        op:
          type: string
          enum: [ "add", "remove", "replace" ]
        path:
          type: string
        value:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
      example:
        - op: 'replace'
          path: 'displayName'
          value: 'org_role'
    #-----------------------------------------------------
    # The Patch Role Operation Output - Role
    #-----------------------------------------------------
    PatchRoleOperationResponseObjectV3:
      type: object
      properties:
        displayName:
          type: string
          example: 'loginRole'
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/v3/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
            resourceType:
              type: string
              example: Role
        schemas:
          type: object
          example:
            - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ 'application', 'organization' ]
              example: 'organization'
    #-----------------------------------------------------
    # The Role PUT request object
    #-----------------------------------------------------
    RoleEntitlementPutRequestObjectV3:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
            format: "ae66119c-b083-4d4f-81bd-8aa0c3d0a1df"
      example:
        - value: "ae66119c-b083-4d4f-81bd-8aa0c3d0a1df"
        - value: "a9b7da54-41b0-4e3c-823a-731bf3f76937"
    RoleEntitlementPatchRequestV3:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
          example:
            - "urn:ietf:params:scim:api:messages:2.0:PatchOp"
        Operations:
          type: array
          items:
            type: object
            properties:
              op:
                type: string
              path:
                type: string
              value:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      format: uuid
          example:
            - op: add
              value:
                - value: "1f3a758f-0e29-4472-becc-0b21258a680b"
            - op: replace
              value:
                - value: "2819c223-7f76-453a-919d-413861904646"
            - op: remove
              path: "value eq 9065f445-265e-4rfg3-83ad-666c66ed4a55"
    UserRolePatchOperationobjV3:
      type: object
      properties:
        op:
          type: string
          enum: [ "add", "remove", "replace" ]
        path:
          type: string
        value:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
      example:
        - op: 'add'
          path: 'users'
          value:
            - value: '9cac6a86-1f21-4937-9fb1-5be4a93ef349'
        - op: 'remove'
          path: 'users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]'
    #-----------------------------------------------------
    # The Roles Search Request Object
    #-----------------------------------------------------
    RoleSearchRequestObjectV3:
      type: object
      properties:
        schemas:
          type: object
          example:
            - urn:ietf:params:scim:api:messages:2.0:SearchRequest
        startIndex:
          type: integer
          example: 1
        count:
          type: integer
          example: 10
        filter:
          type: string
          example: 'displayName eq loginRole'
    RoleGetResponseObjectV2:
      type: object
      properties:
        displayName:
          type: string
          example: 'loginRole'
        meta:
          type: object
          properties:
            location:
              type: string
              example: "https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
            resourceType:
              type: string
              example: Role
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
        id:
          type: string
          example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
        audience:
          type: object
          properties:
            value:
              type: string
              example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display:
              type: string
              example: 'My Org'
            type:
              type: string
              enum: [ application, organization ]
              example: 'organization'
        users:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                example: "https://localhost:9443/scim2/Users/3a12bae9-4386-44be-befd-caf349297f45"
              display:
                type: string
                example: 'kim'
              value:
                type: string
                example: '008bba85-451d-414b-87de-c03b5a1f4217'
        groups:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                example: "https://localhost:9443/scim2/Groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469"
              display:
                type: string
                example: 'PRIMARY/manager'
              value:
                type: string
                example: '7bac6a86-1f21-4937-9fb1-5be4a93ef469'
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: 'internal_login'
              display:
                type: string
                example: 'Internal Login'
        associatedApplications:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              display:
                type: string
          example:
            - value: '9bbc6a86-1f21-4937-9fb1-5be4a93ef499'
              display: 'XY Web Application'
            - value: '67bc6a86-1f21-4937-9fb1-5be4a93ef488'
              display: 'XY Mobile Application'
    ErrorUnauthorized:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          example: "401"
        schemas:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
        scimType:
          type: string
          example: "Unauthorized"
    ErrorForbidden:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          example: "403"
        schemas:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
        scimType:
          type: string
          example: "Forbidden"
    RoleSearchErrorResponseObject:
      type: object
      required:
        - totalResults
        - startIndex
        - itemsPerPage
        - schemas
      properties:
        totalResults:
          type: integer
          example: 0
        startIndex:
          type: integer
          example: 1
        itemsPerPage:
          type: integer
          example: 0
        schemas:
          type: array
          items:
            example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
    ErrorRoleNotAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          example: "404"
        schemas:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
        detail:
          type: string
          example: "No Role with the id : 4645709c-ea8c-4495-8590-e1fa0efe3de0 in the system."
    ErrorRoleAlreadyAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          example: "409"
        schemas:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
        detail:
          type: string
          example: "Role with name: Internal/loginRole already exists in the system."
    ErrorNoRoleAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          example: "404"
        schemas:
          type: array
          items:
            type: string
            example: "urn:ietf:params:scim:api:messages:2.0:Error"
        detail:
          type: string
          example: "Role not found in the system."
    ErrorInternalServerError:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          example: "500"
        schemas:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
        detail:
          type: string
          example: "Internal Server Error."
    ErrorInvalidInput:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          examples:
            - '400'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - invalidSyntax
        detail:
          type: string
          examples:
            - Request is unparsable, syntactically incorrect, or violates schema.
    ErrorNotAcceptable:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          examples:
            - '406'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Not Acceptable